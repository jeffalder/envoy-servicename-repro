admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
  - name: proxy_listener
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          access_log:
            - name: envoy.access_loggers.stdout
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          tracing:
            provider:
              name: envoy.tracers.zipkin
              typed_config:
                "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                collector_cluster: zipkin
                trace_id_128bit: true
                # Just to fake out the data
                collector_endpoint: "/status/200"
                collector_endpoint_version: HTTP_JSON
                collector_hostname: "staging-trace-api.newrelic.com"

          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
              - name: local_service
                domains: ["*"]
                routes:
                  - name: my_cool_route
                    match:
                      prefix: "/"
                    route:
                      host_rewrite_literal: backend
                      cluster: backend_cluster
          http_filters:
            # must be last
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: backend_cluster
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    wait_for_warm_on_init: false
    health_checks:
      - timeout: 20s
        interval: 60s
        healthy_threshold: 1
        unhealthy_threshold: 20
        reuse_connection: false
        event_log_path: /dev/stdout
        always_log_health_check_failures: true
        # Force multiple checks until the container comes up
        no_traffic_interval: 2s
        http_health_check:
          path: /status/200
    load_assignment:
      cluster_name: backend_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend
                port_value: 80

  - name: zipkin
    connect_timeout: 30s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    wait_for_warm_on_init: false
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    load_assignment:
      cluster_name: zipkin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # this is just so that the request bodies can be logged; normally this would be a zipkin server
                address: mitmproxy
                port_value: 8080
